digraph "dependency-graph-[object Object]" {
  compound = true;
  "dependency-graph-[object Object]" [
    style = "invis";
  ];
  "src/condition/condition.ts";
  "src/feature/index.ts";
  "exit_src/condition";
  "name_src/feature";
  "src/matchable.ts";
  "src/condition/and.ts";
  "src/condition/not.ts";
  "src/condition/or.ts";
  "src/feature/comparison.ts";
  "exit_src/feature";
  "src/value/index.ts";
  "name_src/value";
  "src/feature/feature.ts";
  "src/resolver.ts";
  "src/feature/height.ts";
  "src/feature/orientation.ts";
  "src/feature/scripting.ts";
  "src/feature/width.ts";
  "src/condition/index.ts";
  "name_src/condition";
  "src/list.ts";
  "src/modifier.ts";
  "src/query.ts";
  "src/type.ts";
  "src/value/value.ts";
  "src/value/bound.ts";
  "src/value/discrete.ts";
  "src/value/range.ts";
  subgraph "cluster_src" {
    color = "#000000";
    label = "";
    "name_src" [
      penwidth = 5;
      shape = "rectangle";
      color = "#80ff00";
      label = "src";
    ];
    "exit_src" [
      style = "invis";
    ];
    subgraph "cluster_src" {
      color = "#000000";
      label = "";
      "name_src" [
        penwidth = 5;
        shape = "rectangle";
        color = "#80ff00";
        label = "src";
      ];
      "exit_src" [
        style = "invis";
      ];
      "src/index.ts" [
        label = "index.ts";
        color = "#80ff00";
        penwidth = 5;
      ];
      "src/list.ts" [
        label = "list.ts";
      ];
      "src/matchable.ts" [
        label = "matchable.ts";
      ];
      "src/modifier.ts" [
        label = "modifier.ts";
      ];
      "src/query.ts" [
        label = "query.ts";
      ];
      "src/resolver.ts" [
        label = "resolver.ts";
      ];
      "src/type.ts" [
        label = "type.ts";
      ];
      subgraph "cluster_src/condition" {
        color = "#000000";
        label = "";
        "name_src/condition" [
          penwidth = 5;
          shape = "rectangle";
          color = "#00ffff";
          label = "condition";
        ];
        "exit_src/condition" [
          style = "invis";
        ];
        "src/condition/and.ts" [
          label = "and.ts";
        ];
        "src/condition/condition.ts" [
          label = "condition.ts";
        ];
        "src/condition/index.ts" [
          label = "index.ts";
          color = "#00ffff";
          penwidth = 5;
        ];
        "src/condition/not.ts" [
          label = "not.ts";
        ];
        "src/condition/or.ts" [
          label = "or.ts";
        ];
        "src/condition/and.ts" -> "exit_src/condition" [
          style = "invis";
        ];
        "src/condition/condition.ts" -> "exit_src/condition" [
          style = "invis";
        ];
        "src/condition/index.ts" -> "exit_src/condition" [
          style = "invis";
        ];
        "src/condition/not.ts" -> "exit_src/condition" [
          style = "invis";
        ];
        "src/condition/or.ts" -> "exit_src/condition" [
          style = "invis";
        ];
      }
      subgraph "cluster_src/feature" {
        color = "#000000";
        label = "";
        "name_src/feature" [
          penwidth = 5;
          shape = "rectangle";
          color = "#ff0000";
          label = "feature";
        ];
        "exit_src/feature" [
          style = "invis";
        ];
        "src/feature/comparison.ts" [
          label = "comparison.ts";
        ];
        "src/feature/feature.ts" [
          label = "feature.ts";
        ];
        "src/feature/height.ts" [
          label = "height.ts";
        ];
        "src/feature/index.ts" [
          label = "index.ts";
          color = "#ff0000";
          penwidth = 5;
        ];
        "src/feature/orientation.ts" [
          label = "orientation.ts";
        ];
        "src/feature/scripting.ts" [
          label = "scripting.ts";
        ];
        "src/feature/width.ts" [
          label = "width.ts";
        ];
        "src/feature/comparison.ts" -> "exit_src/feature" [
          style = "invis";
        ];
        "src/feature/feature.ts" -> "exit_src/feature" [
          style = "invis";
        ];
        "src/feature/height.ts" -> "exit_src/feature" [
          style = "invis";
        ];
        "src/feature/index.ts" -> "exit_src/feature" [
          style = "invis";
        ];
        "src/feature/orientation.ts" -> "exit_src/feature" [
          style = "invis";
        ];
        "src/feature/scripting.ts" -> "exit_src/feature" [
          style = "invis";
        ];
        "src/feature/width.ts" -> "exit_src/feature" [
          style = "invis";
        ];
      }
      subgraph "cluster_src/value" {
        color = "#000000";
        label = "";
        "name_src/value" [
          penwidth = 5;
          shape = "rectangle";
          color = "#8000ff";
          label = "value";
        ];
        "exit_src/value" [
          style = "invis";
        ];
        "src/value/bound.ts" [
          label = "bound.ts";
        ];
        "src/value/discrete.ts" [
          label = "discrete.ts";
        ];
        "src/value/index.ts" [
          label = "index.ts";
          color = "#8000ff";
          penwidth = 5;
        ];
        "src/value/range.ts" [
          label = "range.ts";
        ];
        "src/value/value.ts" [
          label = "value.ts";
        ];
        "src/value/bound.ts" -> "exit_src/value" [
          style = "invis";
        ];
        "src/value/discrete.ts" -> "exit_src/value" [
          style = "invis";
        ];
        "src/value/index.ts" -> "exit_src/value" [
          style = "invis";
        ];
        "src/value/range.ts" -> "exit_src/value" [
          style = "invis";
        ];
        "src/value/value.ts" -> "exit_src/value" [
          style = "invis";
        ];
      }
      "exit_src/condition" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/condition" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/condition" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/condition" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/condition" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/feature" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/feature" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/feature" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/feature" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/feature" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/feature" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/feature" -> "exit_src" [
        style = "invis";
      ];
      "src/index.ts" -> "exit_src" [
        style = "invis";
      ];
      "src/list.ts" -> "exit_src" [
        style = "invis";
      ];
      "src/matchable.ts" -> "exit_src" [
        style = "invis";
      ];
      "src/modifier.ts" -> "exit_src" [
        style = "invis";
      ];
      "src/query.ts" -> "exit_src" [
        style = "invis";
      ];
      "src/resolver.ts" -> "exit_src" [
        style = "invis";
      ];
      "src/type.ts" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/value" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/value" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/value" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/value" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/value" -> "exit_src" [
        style = "invis";
      ];
    }
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
  }
  "exit_src" -> "dependency-graph-[object Object]" [
    style = "invis";
  ];
  "src/condition/and.ts" -> "src/condition/condition.ts" [
    style = "invis";
  ];
  "src/condition/and.ts" -> "src/condition/condition.ts" [
    style = "dotted";
    ltail = "cluster_src/condition/and.ts";
    lhead = "cluster_src/condition/condition.ts";
    color = "black";
  ];
  "exit_src/condition" -> "name_src/feature" [
    style = "dotted";
    ltail = "cluster_src/condition";
    lhead = "cluster_src/feature";
    color = "#00ffff";
  ];
  "src/condition/and.ts" -> "src/matchable.ts" [
    style = "invis";
  ];
  "exit_src/condition" -> "src/matchable.ts" [
    style = "dotted";
    ltail = "cluster_src/condition";
    lhead = "cluster_src/matchable.ts";
    color = "#00ffff";
  ];
  "src/condition/condition.ts" -> "src/condition/and.ts" [
    style = "invis";
  ];
  "src/condition/condition.ts" -> "src/condition/and.ts" [
    style = "solid";
    ltail = "cluster_src/condition/condition.ts";
    lhead = "cluster_src/condition/and.ts";
    color = "black";
  ];
  "src/condition/condition.ts" -> "src/condition/not.ts" [
    style = "invis";
  ];
  "src/condition/condition.ts" -> "src/condition/not.ts" [
    style = "solid";
    ltail = "cluster_src/condition/condition.ts";
    lhead = "cluster_src/condition/not.ts";
    color = "black";
  ];
  "src/condition/condition.ts" -> "src/condition/or.ts" [
    style = "invis";
  ];
  "src/condition/condition.ts" -> "src/condition/or.ts" [
    style = "solid";
    ltail = "cluster_src/condition/condition.ts";
    lhead = "cluster_src/condition/or.ts";
    color = "black";
  ];
  "exit_src/condition" -> "name_src/feature" [
    style = "invis";
  ];
  "src/condition/index.ts" -> "src/condition/and.ts" [
    style = "invis";
  ];
  "src/condition/index.ts" -> "src/condition/and.ts" [
    style = "solid";
    ltail = "cluster_src/condition/index.ts";
    lhead = "cluster_src/condition/and.ts";
    color = "black";
  ];
  "src/condition/index.ts" -> "src/condition/condition.ts" [
    style = "invis";
  ];
  "src/condition/index.ts" -> "src/condition/condition.ts" [
    style = "solid";
    ltail = "cluster_src/condition/index.ts";
    lhead = "cluster_src/condition/condition.ts";
    color = "black";
  ];
  "src/condition/index.ts" -> "src/condition/not.ts" [
    style = "invis";
  ];
  "src/condition/index.ts" -> "src/condition/not.ts" [
    style = "solid";
    ltail = "cluster_src/condition/index.ts";
    lhead = "cluster_src/condition/not.ts";
    color = "black";
  ];
  "src/condition/index.ts" -> "src/condition/or.ts" [
    style = "invis";
  ];
  "src/condition/index.ts" -> "src/condition/or.ts" [
    style = "solid";
    ltail = "cluster_src/condition/index.ts";
    lhead = "cluster_src/condition/or.ts";
    color = "black";
  ];
  "src/condition/not.ts" -> "src/condition/condition.ts" [
    style = "invis";
  ];
  "src/condition/not.ts" -> "src/condition/condition.ts" [
    style = "dotted";
    ltail = "cluster_src/condition/not.ts";
    lhead = "cluster_src/condition/condition.ts";
    color = "black";
  ];
  "exit_src/condition" -> "name_src/feature" [
    style = "invis";
  ];
  "src/condition/not.ts" -> "src/matchable.ts" [
    style = "invis";
  ];
  "exit_src/condition" -> "src/matchable.ts" [
    style = "invis";
  ];
  "src/condition/or.ts" -> "src/condition/condition.ts" [
    style = "invis";
  ];
  "src/condition/or.ts" -> "src/condition/condition.ts" [
    style = "dotted";
    ltail = "cluster_src/condition/or.ts";
    lhead = "cluster_src/condition/condition.ts";
    color = "black";
  ];
  "exit_src/condition" -> "name_src/feature" [
    style = "invis";
  ];
  "src/condition/or.ts" -> "src/matchable.ts" [
    style = "invis";
  ];
  "exit_src/condition" -> "src/matchable.ts" [
    style = "invis";
  ];
  "src/feature/feature.ts" -> "src/feature/comparison.ts" [
    style = "invis";
  ];
  "src/feature/feature.ts" -> "src/feature/comparison.ts" [
    style = "solid";
    ltail = "cluster_src/feature/feature.ts";
    lhead = "cluster_src/feature/comparison.ts";
    color = "black";
  ];
  "src/feature/feature.ts" -> "src/matchable.ts" [
    style = "invis";
  ];
  "exit_src/feature" -> "src/matchable.ts" [
    style = "dotted";
    ltail = "cluster_src/feature";
    lhead = "cluster_src/matchable.ts";
    color = "#ff0000";
  ];
  "exit_src/feature" -> "name_src/value" [
    style = "solid";
    ltail = "cluster_src/feature";
    lhead = "cluster_src/value";
    color = "#ff0000";
  ];
  "src/feature/height.ts" -> "src/feature/feature.ts" [
    style = "invis";
  ];
  "src/feature/height.ts" -> "src/feature/feature.ts" [
    style = "solid";
    ltail = "cluster_src/feature/height.ts";
    lhead = "cluster_src/feature/feature.ts";
    color = "black";
  ];
  "src/feature/height.ts" -> "src/resolver.ts" [
    style = "invis";
  ];
  "exit_src/feature" -> "src/resolver.ts" [
    style = "solid";
    ltail = "cluster_src/feature";
    lhead = "cluster_src/resolver.ts";
    color = "#ff0000";
  ];
  "exit_src/feature" -> "name_src/value" [
    style = "invis";
  ];
  "src/feature/index.ts" -> "src/feature/feature.ts" [
    style = "invis";
  ];
  "src/feature/index.ts" -> "src/feature/feature.ts" [
    style = "solid";
    ltail = "cluster_src/feature/index.ts";
    lhead = "cluster_src/feature/feature.ts";
    color = "black";
  ];
  "src/feature/index.ts" -> "src/feature/height.ts" [
    style = "invis";
  ];
  "src/feature/index.ts" -> "src/feature/height.ts" [
    style = "solid";
    ltail = "cluster_src/feature/index.ts";
    lhead = "cluster_src/feature/height.ts";
    color = "black";
  ];
  "src/feature/index.ts" -> "src/feature/orientation.ts" [
    style = "invis";
  ];
  "src/feature/index.ts" -> "src/feature/orientation.ts" [
    style = "solid";
    ltail = "cluster_src/feature/index.ts";
    lhead = "cluster_src/feature/orientation.ts";
    color = "black";
  ];
  "src/feature/index.ts" -> "src/feature/scripting.ts" [
    style = "invis";
  ];
  "src/feature/index.ts" -> "src/feature/scripting.ts" [
    style = "solid";
    ltail = "cluster_src/feature/index.ts";
    lhead = "cluster_src/feature/scripting.ts";
    color = "black";
  ];
  "src/feature/index.ts" -> "src/feature/width.ts" [
    style = "invis";
  ];
  "src/feature/index.ts" -> "src/feature/width.ts" [
    style = "solid";
    ltail = "cluster_src/feature/index.ts";
    lhead = "cluster_src/feature/width.ts";
    color = "black";
  ];
  "src/feature/orientation.ts" -> "src/feature/feature.ts" [
    style = "invis";
  ];
  "src/feature/orientation.ts" -> "src/feature/feature.ts" [
    style = "solid";
    ltail = "cluster_src/feature/orientation.ts";
    lhead = "cluster_src/feature/feature.ts";
    color = "black";
  ];
  "exit_src/feature" -> "name_src/value" [
    style = "invis";
  ];
  "src/feature/scripting.ts" -> "src/feature/feature.ts" [
    style = "invis";
  ];
  "src/feature/scripting.ts" -> "src/feature/feature.ts" [
    style = "solid";
    ltail = "cluster_src/feature/scripting.ts";
    lhead = "cluster_src/feature/feature.ts";
    color = "black";
  ];
  "exit_src/feature" -> "name_src/value" [
    style = "invis";
  ];
  "src/feature/width.ts" -> "src/feature/feature.ts" [
    style = "invis";
  ];
  "src/feature/width.ts" -> "src/feature/feature.ts" [
    style = "solid";
    ltail = "cluster_src/feature/width.ts";
    lhead = "cluster_src/feature/feature.ts";
    color = "black";
  ];
  "src/feature/width.ts" -> "src/resolver.ts" [
    style = "invis";
  ];
  "exit_src/feature" -> "src/resolver.ts" [
    style = "invis";
  ];
  "exit_src/feature" -> "name_src/value" [
    style = "invis";
  ];
  "src/index.ts" -> "name_src/condition" [
    style = "solid";
    ltail = "cluster_src/index.ts";
    lhead = "cluster_src/condition";
    color = "#80ff00";
  ];
  "src/index.ts" -> "name_src/feature" [
    style = "solid";
    ltail = "cluster_src/index.ts";
    lhead = "cluster_src/feature";
    color = "#80ff00";
  ];
  "src/index.ts" -> "src/list.ts" [
    style = "invis";
  ];
  "src/index.ts" -> "src/list.ts" [
    style = "solid";
    ltail = "cluster_src/index.ts";
    lhead = "cluster_src/list.ts";
    color = "black";
  ];
  "src/index.ts" -> "src/modifier.ts" [
    style = "invis";
  ];
  "src/index.ts" -> "src/modifier.ts" [
    style = "solid";
    ltail = "cluster_src/index.ts";
    lhead = "cluster_src/modifier.ts";
    color = "black";
  ];
  "src/index.ts" -> "src/query.ts" [
    style = "invis";
  ];
  "src/index.ts" -> "src/query.ts" [
    style = "solid";
    ltail = "cluster_src/index.ts";
    lhead = "cluster_src/query.ts";
    color = "black";
  ];
  "src/index.ts" -> "src/type.ts" [
    style = "invis";
  ];
  "src/index.ts" -> "src/type.ts" [
    style = "solid";
    ltail = "cluster_src/index.ts";
    lhead = "cluster_src/type.ts";
    color = "black";
  ];
  "src/index.ts" -> "name_src/value" [
    style = "solid";
    ltail = "cluster_src/index.ts";
    lhead = "cluster_src/value";
    color = "#80ff00";
  ];
  "src/list.ts" -> "src/matchable.ts" [
    style = "invis";
  ];
  "src/list.ts" -> "src/matchable.ts" [
    style = "dotted";
    ltail = "cluster_src/list.ts";
    lhead = "cluster_src/matchable.ts";
    color = "black";
  ];
  "src/list.ts" -> "src/query.ts" [
    style = "invis";
  ];
  "src/list.ts" -> "src/query.ts" [
    style = "solid";
    ltail = "cluster_src/list.ts";
    lhead = "cluster_src/query.ts";
    color = "black";
  ];
  "src/query.ts" -> "name_src/condition" [
    style = "solid";
    ltail = "cluster_src/query.ts";
    lhead = "cluster_src/condition";
    color = "#80ff00";
  ];
  "src/query.ts" -> "name_src/feature" [
    style = "solid";
    ltail = "cluster_src/query.ts";
    lhead = "cluster_src/feature";
    color = "#80ff00";
  ];
  "src/query.ts" -> "src/matchable.ts" [
    style = "invis";
  ];
  "src/query.ts" -> "src/matchable.ts" [
    style = "dotted";
    ltail = "cluster_src/query.ts";
    lhead = "cluster_src/matchable.ts";
    color = "black";
  ];
  "src/query.ts" -> "src/modifier.ts" [
    style = "invis";
  ];
  "src/query.ts" -> "src/modifier.ts" [
    style = "solid";
    ltail = "cluster_src/query.ts";
    lhead = "cluster_src/modifier.ts";
    color = "black";
  ];
  "src/query.ts" -> "src/type.ts" [
    style = "invis";
  ];
  "src/query.ts" -> "src/type.ts" [
    style = "solid";
    ltail = "cluster_src/query.ts";
    lhead = "cluster_src/type.ts";
    color = "black";
  ];
  "src/type.ts" -> "src/matchable.ts" [
    style = "invis";
  ];
  "src/type.ts" -> "src/matchable.ts" [
    style = "dotted";
    ltail = "cluster_src/type.ts";
    lhead = "cluster_src/matchable.ts";
    color = "black";
  ];
  "src/value/discrete.ts" -> "src/value/value.ts" [
    style = "invis";
  ];
  "src/value/discrete.ts" -> "src/value/value.ts" [
    style = "dotted";
    ltail = "cluster_src/value/discrete.ts";
    lhead = "cluster_src/value/value.ts";
    color = "black";
  ];
  "src/value/index.ts" -> "src/value/value.ts" [
    style = "invis";
  ];
  "src/value/index.ts" -> "src/value/value.ts" [
    style = "solid";
    ltail = "cluster_src/value/index.ts";
    lhead = "cluster_src/value/value.ts";
    color = "black";
  ];
  "src/value/range.ts" -> "src/value/bound.ts" [
    style = "invis";
  ];
  "src/value/range.ts" -> "src/value/bound.ts" [
    style = "solid";
    ltail = "cluster_src/value/range.ts";
    lhead = "cluster_src/value/bound.ts";
    color = "black";
  ];
  "src/value/range.ts" -> "src/value/discrete.ts" [
    style = "invis";
  ];
  "src/value/range.ts" -> "src/value/discrete.ts" [
    style = "solid";
    ltail = "cluster_src/value/range.ts";
    lhead = "cluster_src/value/discrete.ts";
    color = "black";
  ];
  "src/value/range.ts" -> "src/value/value.ts" [
    style = "invis";
  ];
  "src/value/range.ts" -> "src/value/value.ts" [
    style = "dotted";
    ltail = "cluster_src/value/range.ts";
    lhead = "cluster_src/value/value.ts";
    color = "black";
  ];
  "src/value/value.ts" -> "src/value/bound.ts" [
    style = "invis";
  ];
  "src/value/value.ts" -> "src/value/bound.ts" [
    style = "solid";
    ltail = "cluster_src/value/value.ts";
    lhead = "cluster_src/value/bound.ts";
    color = "black";
  ];
  "src/value/value.ts" -> "src/value/discrete.ts" [
    style = "invis";
  ];
  "src/value/value.ts" -> "src/value/discrete.ts" [
    style = "solid";
    ltail = "cluster_src/value/value.ts";
    lhead = "cluster_src/value/discrete.ts";
    color = "black";
  ];
  "src/value/value.ts" -> "src/value/range.ts" [
    style = "invis";
  ];
  "src/value/value.ts" -> "src/value/range.ts" [
    style = "solid";
    ltail = "cluster_src/value/value.ts";
    lhead = "cluster_src/value/range.ts";
    color = "black";
  ];
}