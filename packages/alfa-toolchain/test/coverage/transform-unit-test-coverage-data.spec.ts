import { test } from "@siteimprove/alfa-test";

import {
  toLink,
  toTableRow,
  toHtmlTable,
  toHtml,
} from "../../dist/coverage/generate-unit-test-coverage.js";

test("toLink() returns correct anchor for package coverage", (t) => {
  const name = "pkg-name";
  const relativePath = "packages/pkg";

  const actual = toLink(name, relativePath);
  const expected = `<a href="../../packages/pkg/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name</a>`;

  t.equal(actual, expected);
});

test("toTableRow() returns correct table row for 0% coverage (low)", (t) => {
  const data = {
    name: "pkg-name",
    relativePath: "packages/pkg",
    lineCoverage: 0,
  };

  const actual = toTableRow(data);

  const expected = `    <tr class="low">
      <td><a href="../../packages/pkg/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name</a></td>
      <td style="text-align: right;"> 0.00%</td>
    </tr>`;

  t.equal(actual, expected);
});

test("toTableRow() returns correct table row for 80% coverage (medium)", (t) => {
  const data = {
    name: "pkg-name",
    relativePath: "packages/pkg",
    lineCoverage: 80,
  };

  const actual = toTableRow(data);

  const expected = `    <tr class="medium">
      <td><a href="../../packages/pkg/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name</a></td>
      <td style="text-align: right;">80.00%</td>
    </tr>`;

  t.equal(actual, expected);
});

test("toTableRow() returns correct table row for 100% coverage (high)", (t) => {
  const data = {
    name: "pkg-name",
    relativePath: "packages/pkg",
    lineCoverage: 100,
  };

  const actual = toTableRow(data);

  const expected = `    <tr class="high">
      <td><a href="../../packages/pkg/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name</a></td>
      <td style="text-align: right;">100.00%</td>
    </tr>`;

  t.equal(actual, expected);
});

test("toHtmlTable() returns correct table with 4 rows and proper classes", (t) => {
  const data = [
    {
      name: "pkg-name-1",
      relativePath: "packages/pkg1",
      lineCoverage: 0,
    },
    {
      name: "pkg-name-2",
      relativePath: "packages/pkg2",
      lineCoverage: 60,
    },
    {
      name: "pkg-name-3",
      relativePath: "packages/pkg3",
      lineCoverage: 85,
    },
    {
      name: "pkg-name-4",
      relativePath: "packages/pkg4",
      lineCoverage: 100,
    },
  ];

  const actual = toHtmlTable(data);

  const expected = `<table>
  <thead>
    <tr>
      <th>Package</th>
      <th>Unit Test Coverage (lines)</th>
    </tr>
  </thead>
  <tbody>
    <tr class="low">
      <td><a href="../../packages/pkg1/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name-1</a></td>
      <td style="text-align: right;"> 0.00%</td>
    </tr>
    <tr class="medium">
      <td><a href="../../packages/pkg2/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name-2</a></td>
      <td style="text-align: right;">60.00%</td>
    </tr>
    <tr class="high">
      <td><a href="../../packages/pkg3/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name-3</a></td>
      <td style="text-align: right;">85.00%</td>
    </tr>
    <tr class="high">
      <td><a href="../../packages/pkg4/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name-4</a></td>
      <td style="text-align: right;">100.00%</td>
    </tr>
  </tbody>
</table>`;

  t.equal(actual, expected);
});

test("toHtml() returns a full HTML document containing the table and styles", (t) => {
  const data = [
    {
      name: "pkg-name-1",
      relativePath: "packages/pkg1",
      lineCoverage: 0,
    },
    {
      name: "pkg-name-2",
      relativePath: "packages/pkg2",
      lineCoverage: 60,
    },
    {
      name: "pkg-name-3",
      relativePath: "packages/pkg3",
      lineCoverage: 85,
    },
    {
      name: "pkg-name-4",
      relativePath: "packages/pkg4",
      lineCoverage: 100,
    },
  ];

  const actual = toHtml(data);

  const expected = `<!DOCTYPE html>
<!-- Autogenerated by packages/alfa-toolchain/src/coverage/gather-unit-test-coverage.ts, do not edit directly. -->
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Alfa Packages Unit Test Coverage</title>
  <style>
    body {
      margin: 2rem;
    }
    .low { background: #FCE1E5 }
    .high { background: #E6F5D0 }
    .medium { background: #FFF4C2; }
    table {
      border-collapse: collapse;
      width: 100%;
      max-width: 600px;
      margin-top: 1rem;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 0.5rem 1rem;
    }
    th {
      background-color: #f4f4f4;
      text-align: left;
    }
    .disclaimer {
      width: 50%;
      margin-left: auto;
      margin-right: auto;
      font-size: 1.2em;
      border: 2px black solid
      ;
    }
    .warning {
      font-weight: bold;
      width: fit-content;
      margin-left: auto;
      margin-right: auto;
      font-size: larger;
    }
  </style>
</head>
<body>
  <div class="disclaimer">
  <p class="warning">
    This is for internal documentation only, 
    see <a href="./index.html">the global coverage report</a>.
  </p>
  <p>
    Some packages, <i>e.g.</i> <code>alfa-option</code>, are foundational 
    and used a lot by other packages, <i>e.g.</i> <code>alfa-rules</code>. 
    Thus, any test in <code>alfa-rules</code> will effectively also test 
    parts of <code>alfa-option</code> (as integration test). This is 
    reflected in <a href="./index.html">the global coverage report</a> who 
    takes all tests into account, and this is sufficient to give a good 
    measure of security to the codebase. However, foundational packages 
    should also have specific unit tests, checking that the minutiae of 
    each function works as intended. This report shows the coverage by 
    unit tests inside each package. We should ultimately aim at getting 
    these numbers as high as possible.
  </p>
</div>
  <h1>Alfa Packages Unit Test Coverage</h1>
  <table>
  <thead>
    <tr>
      <th>Package</th>
      <th>Unit Test Coverage (lines)</th>
    </tr>
  </thead>
  <tbody>
    <tr class="low">
      <td><a href="../../packages/pkg1/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name-1</a></td>
      <td style="text-align: right;"> 0.00%</td>
    </tr>
    <tr class="medium">
      <td><a href="../../packages/pkg2/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name-2</a></td>
      <td style="text-align: right;">60.00%</td>
    </tr>
    <tr class="high">
      <td><a href="../../packages/pkg3/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name-3</a></td>
      <td style="text-align: right;">85.00%</td>
    </tr>
    <tr class="high">
      <td><a href="../../packages/pkg4/docs/coverage/index.html" target="_blank" rel="noopener noreferrer">pkg-name-4</a></td>
      <td style="text-align: right;">100.00%</td>
    </tr>
  </tbody>
</table>
</body>
</html>`;

  t.equal(actual, expected);
});
