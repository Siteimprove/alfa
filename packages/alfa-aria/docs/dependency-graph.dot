digraph "dependency-graph-@siteimprove/alfa-aria" {
  compound = true;
  "src/dom/predicate/has-accessible-name.ts";
  "name_src/dom/predicate";
  "src/dom/predicate/has-explicit-role.ts";
  "src/dom/predicate/has-heading-level.ts";
  "src/dom/predicate/has-implicit-role.ts";
  "src/dom/predicate/has-incorrect-role-without-name.ts";
  "src/dom/predicate/has-non-default-role.ts";
  "src/dom/predicate/has-non-empty-accessible-name.ts";
  "src/dom/predicate/has-role.ts";
  "src/dom/predicate/is-included-accessibility-tree.ts";
  "src/dom/predicate/is-marked-decorative.ts";
  "src/dom/predicate/is-perceivable.ts";
  "src/dom/predicate/is-programmatically-hidden.ts";
  "src/dom/predicate/is-semantically-disabled.ts";
  "src/node.ts";
  "exit_src/node";
  "src/name/index.ts";
  "name_src/name";
  "src/role.ts";
  "exit_src/dom";
  "exit_src/role";
  "src/attribute.ts";
  "src/name/predicate/has-value.ts";
  "src/name/name.ts";
  "src/name/predicate/index.ts";
  "name_src/name/predicate";
  "src/name/source.ts";
  "src/name/state.ts";
  "src/role/predicate/has-name.ts";
  "name_src/role";
  "src/feature.ts";
  "src/role/data.ts";
  "src/role/predicate.ts";
  "src/attribute/data.ts";
  "name_src/attribute";
  "exit_src/name";
  "name_src/dom";
  "src/dom/dom.ts";
  "src/node/container.ts";
  "name_src/node";
  "src/node/element.ts";
  "src/node/inert.ts";
  "src/node/text.ts";
  "exit_src/name/predicate";
  "src/node/predicate/has-attribute.ts";
  "name_src/node/predicate";
  "src/node/predicate/has-name.ts";
  "src/node/predicate/has-role.ts";
  "src/node/predicate.ts";
  "src/index.ts";
  "name_src/role/predicate";
  subgraph "cluster_src" {
    color = "#000000";
    label = "";
    "exit_src" [
      style = "invis";
    ];
    subgraph "cluster_src" {
      color = "#000000";
      label = "";
      "name_src" [
        penwidth = 5;
        shape = "rectangle";
        color = "#ff0000";
        label = "src";
      ];
      "exit_src" [
        style = "invis";
      ];
      "src/role.ts" [
        label = "role.ts";
        fillcolor = "#ff6c60";
        style = "rounded,filled";
      ];
      "src/attribute.ts" [
        label = "attribute.ts";
        fillcolor = "#ff6c60";
        style = "rounded,filled";
      ];
      "src/index.ts" [
        label = "index.ts";
        color = "#ff0000";
        penwidth = 5;
        fillcolor = "#ff6c60";
        style = "rounded,filled";
      ];
      "src/feature.ts" [
        label = "feature.ts";
        fillcolor = "#ff6c60";
        style = "rounded,filled";
      ];
      "src/node.ts" [
        label = "node.ts";
        fillcolor = "#ff6c60";
        style = "rounded,filled";
      ];
      subgraph "cluster_src/dom" {
        color = "#000000";
        label = "";
        "name_src/dom" [
          penwidth = 5;
          shape = "rectangle";
          color = "#33ff00";
          label = "dom";
        ];
        "exit_src/dom" [
          style = "invis";
        ];
        "src/dom/dom.ts" [
          label = "dom.ts";
          fillcolor = "#ff6c60";
          style = "rounded,filled";
        ];
        subgraph "cluster_src/dom/predicate" {
          color = "#000000";
          label = "";
          "name_src/dom/predicate" [
            penwidth = 5;
            shape = "rectangle";
            color = "#0066ff";
            label = "predicate";
          ];
          "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/is-perceivable.ts" [
            label = "is-perceivable.ts";
          ];
          "src/dom/predicate/is-marked-decorative.ts" [
            label = "is-marked-decorative.ts";
          ];
          "src/dom/predicate/has-non-empty-accessible-name.ts" [
            label = "has-non-empty-accessible-name.ts";
          ];
          "src/dom/predicate/has-incorrect-role-without-name.ts" [
            label = "has-incorrect-role-without-name.ts";
          ];
          "src/dom/predicate/has-role.ts" [
            label = "has-role.ts";
          ];
          "src/dom/predicate/has-heading-level.ts" [
            label = "has-heading-level.ts";
          ];
          "src/dom/predicate/is-programmatically-hidden.ts" [
            label = "is-programmatically-hidden.ts";
          ];
          "src/dom/predicate/has-implicit-role.ts" [
            label = "has-implicit-role.ts";
          ];
          "src/dom/predicate/has-explicit-role.ts" [
            label = "has-explicit-role.ts";
          ];
          "src/dom/predicate/has-non-default-role.ts" [
            label = "has-non-default-role.ts";
          ];
          "src/dom/predicate/has-accessible-name.ts" [
            label = "has-accessible-name.ts";
            fillcolor = "#ff6c60";
            style = "rounded,filled";
          ];
          "src/dom/predicate/is-semantically-disabled.ts" [
            label = "is-semantically-disabled.ts";
          ];
          "src/dom/predicate/is-included-accessibility-tree.ts" [
            label = "is-included-accessibility-tree.ts";
          ];
          "src/dom/predicate/is-perceivable.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/is-marked-decorative.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/has-non-empty-accessible-name.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/has-incorrect-role-without-name.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/has-role.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/has-heading-level.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/is-programmatically-hidden.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/has-implicit-role.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/has-explicit-role.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/has-non-default-role.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/has-accessible-name.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/is-semantically-disabled.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
          "src/dom/predicate/is-included-accessibility-tree.ts" -> "exit_src/dom/predicate" [
            style = "invis";
          ];
        }
        "src/dom/dom.ts" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
        "exit_src/dom/predicate" -> "exit_src/dom" [
          style = "invis";
        ];
      }
      subgraph "cluster_src/node" {
        color = "#000000";
        label = "";
        "name_src/node" [
          penwidth = 5;
          shape = "rectangle";
          color = "#ccff00";
          label = "node";
        ];
        "exit_src/node" [
          style = "invis";
        ];
        "src/node/inert.ts" [
          label = "inert.ts";
          fillcolor = "#ff6c60";
          style = "rounded,filled";
        ];
        "src/node/element.ts" [
          label = "element.ts";
          fillcolor = "#ff6c60";
          style = "rounded,filled";
        ];
        "src/node/text.ts" [
          label = "text.ts";
          fillcolor = "#ff6c60";
          style = "rounded,filled";
        ];
        "src/node/container.ts" [
          label = "container.ts";
          fillcolor = "#ff6c60";
          style = "rounded,filled";
        ];
        "src/node/predicate.ts" [
          label = "predicate.ts";
        ];
        subgraph "cluster_src/node/predicate" {
          color = "#000000";
          label = "";
          "name_src/node/predicate" [
            penwidth = 5;
            shape = "rectangle";
            color = "#00ffff";
            label = "predicate";
          ];
          "exit_src/node/predicate" [
            style = "invis";
          ];
          "src/node/predicate/has-name.ts" [
            label = "has-name.ts";
          ];
          "src/node/predicate/has-role.ts" [
            label = "has-role.ts";
          ];
          "src/node/predicate/has-attribute.ts" [
            label = "has-attribute.ts";
          ];
          "src/node/predicate/has-name.ts" -> "exit_src/node/predicate" [
            style = "invis";
          ];
          "src/node/predicate/has-role.ts" -> "exit_src/node/predicate" [
            style = "invis";
          ];
          "src/node/predicate/has-attribute.ts" -> "exit_src/node/predicate" [
            style = "invis";
          ];
        }
        "src/node/inert.ts" -> "exit_src/node" [
          style = "invis";
        ];
        "exit_src/node/predicate" -> "exit_src/node" [
          style = "invis";
        ];
        "src/node/element.ts" -> "exit_src/node" [
          style = "invis";
        ];
        "src/node/text.ts" -> "exit_src/node" [
          style = "invis";
        ];
        "exit_src/node/predicate" -> "exit_src/node" [
          style = "invis";
        ];
        "src/node/container.ts" -> "exit_src/node" [
          style = "invis";
        ];
        "exit_src/node/predicate" -> "exit_src/node" [
          style = "invis";
        ];
        "src/node/predicate.ts" -> "exit_src/node" [
          style = "invis";
        ];
      }
      subgraph "cluster_src/role" {
        color = "#000000";
        label = "";
        "name_src/role" [
          penwidth = 5;
          shape = "rectangle";
          color = "#3300ff";
          label = "role";
        ];
        "exit_src/role" [
          style = "invis";
        ];
        "src/role/data.ts" [
          label = "data.ts";
        ];
        "src/role/predicate.ts" [
          label = "predicate.ts";
        ];
        subgraph "cluster_src/role/predicate" {
          color = "#000000";
          label = "";
          "name_src/role/predicate" [
            penwidth = 5;
            shape = "rectangle";
            color = "#ff9900";
            label = "predicate";
          ];
          "exit_src/role/predicate" [
            style = "invis";
          ];
          "src/role/predicate/has-name.ts" [
            label = "has-name.ts";
          ];
          "src/role/predicate/has-name.ts" -> "exit_src/role/predicate" [
            style = "invis";
          ];
        }
        "src/role/data.ts" -> "exit_src/role" [
          style = "invis";
        ];
        "exit_src/role/predicate" -> "exit_src/role" [
          style = "invis";
        ];
        "src/role/predicate.ts" -> "exit_src/role" [
          style = "invis";
        ];
      }
      subgraph "cluster_src/name" {
        color = "#000000";
        label = "";
        "name_src/name" [
          penwidth = 5;
          shape = "rectangle";
          color = "#cc00ff";
          label = "name";
        ];
        "exit_src/name" [
          style = "invis";
        ];
        "src/name/index.ts" [
          label = "index.ts";
          color = "#cc00ff";
          penwidth = 5;
          fillcolor = "#ff6c60";
          style = "rounded,filled";
        ];
        "src/name/name.ts" [
          label = "name.ts";
          fillcolor = "#ff6c60";
          style = "rounded,filled";
        ];
        "src/name/source.ts" [
          label = "source.ts";
        ];
        "src/name/state.ts" [
          label = "state.ts";
        ];
        subgraph "cluster_src/name/predicate" {
          color = "#000000";
          label = "";
          "name_src/name/predicate" [
            penwidth = 5;
            shape = "rectangle";
            color = "#00ff66";
            label = "predicate";
          ];
          "exit_src/name/predicate" [
            style = "invis";
          ];
          "src/name/predicate/index.ts" [
            label = "index.ts";
            color = "#00ff66";
            penwidth = 5;
          ];
          "src/name/predicate/has-value.ts" [
            label = "has-value.ts";
          ];
          "src/name/predicate/index.ts" -> "exit_src/name/predicate" [
            style = "invis";
          ];
          "src/name/predicate/has-value.ts" -> "exit_src/name/predicate" [
            style = "invis";
          ];
        }
        "src/name/index.ts" -> "exit_src/name" [
          style = "invis";
        ];
        "exit_src/name/predicate" -> "exit_src/name" [
          style = "invis";
        ];
        "src/name/name.ts" -> "exit_src/name" [
          style = "invis";
        ];
        "src/name/source.ts" -> "exit_src/name" [
          style = "invis";
        ];
        "exit_src/name/predicate" -> "exit_src/name" [
          style = "invis";
        ];
        "src/name/state.ts" -> "exit_src/name" [
          style = "invis";
        ];
      }
      subgraph "cluster_src/attribute" {
        color = "#000000";
        label = "";
        "name_src/attribute" [
          penwidth = 5;
          shape = "rectangle";
          color = "#ff0099";
          label = "attribute";
        ];
        "exit_src/attribute" [
          style = "invis";
        ];
        "src/attribute/data.ts" [
          label = "data.ts";
        ];
        "src/attribute/data.ts" -> "exit_src/attribute" [
          style = "invis";
        ];
      }
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/node" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/node" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/role" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/role" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/node" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/name" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/attribute" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/node" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/node" -> "exit_src" [
        style = "invis";
      ];
      "src/role.ts" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/node" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/node" -> "exit_src" [
        style = "invis";
      ];
      "src/attribute.ts" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/name" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/name" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/name" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "src/index.ts" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/name" -> "exit_src" [
        style = "invis";
      ];
      "src/feature.ts" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/name" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/node" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "src/node.ts" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/dom" -> "exit_src" [
        style = "invis";
      ];
      "exit_src/role" -> "exit_src" [
        style = "invis";
      ];
    }
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
    "exit_src" -> "exit_src" [
      style = "invis";
    ];
  }
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "solid";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/dom/dom.ts" -> "name_src/dom/predicate" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/dom/predicate";
  ];
  "src/node/inert.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/node.ts" [
    style = "solid";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "exit_src/node" -> "name_src/name" [
    style = "solid";
    color = "#ccff00";
    lhead = "cluster_src/name";
    ltail = "cluster_src/node";
  ];
  "src/node/predicate/has-name.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/node.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/dom/predicate/is-perceivable.ts" -> "src/dom/predicate/is-included-accessibility-tree.ts" [
    style = "invis";
  ];
  "src/dom/predicate/is-perceivable.ts" -> "src/dom/predicate/is-included-accessibility-tree.ts" [
    style = "solid";
    color = "black";
  ];
  "src/dom/predicate/is-marked-decorative.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/dom" -> "src/role.ts" [
    style = "solid";
    color = "#33ff00";
    ltail = "cluster_src/dom";
  ];
  "src/role/predicate/has-name.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/role" -> "src/role.ts" [
    style = "dotted";
    color = "#3300ff";
    ltail = "cluster_src/role";
  ];
  "src/node/element.ts" -> "src/attribute.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/attribute.ts" [
    style = "dotted";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "exit_src/node" -> "name_src/name" [
    style = "invis";
    color = "#ccff00";
    lhead = "cluster_src/name";
    ltail = "cluster_src/node";
  ];
  "src/node/element.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/node.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/node/element.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/role.ts" [
    style = "solid";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/dom/predicate/has-non-empty-accessible-name.ts" -> "src/dom/predicate/has-accessible-name.ts" [
    style = "invis";
  ];
  "src/dom/predicate/has-non-empty-accessible-name.ts" -> "src/dom/predicate/has-accessible-name.ts" [
    style = "solid";
    color = "black";
  ];
  "exit_src/dom" -> "name_src/name" [
    style = "solid";
    color = "#33ff00";
    lhead = "cluster_src/name";
    ltail = "cluster_src/dom";
  ];
  "src/name/index.ts" -> "src/name/name.ts" [
    style = "invis";
  ];
  "src/name/index.ts" -> "src/name/name.ts" [
    style = "solid";
    color = "black";
  ];
  "src/name/index.ts" -> "name_src/name/predicate" [
    style = "solid";
    color = "#cc00ff";
    lhead = "cluster_src/name/predicate";
  ];
  "src/name/index.ts" -> "src/name/source.ts" [
    style = "invis";
  ];
  "src/name/index.ts" -> "src/name/source.ts" [
    style = "solid";
    color = "black";
  ];
  "src/name/index.ts" -> "src/name/state.ts" [
    style = "invis";
  ];
  "src/name/index.ts" -> "src/name/state.ts" [
    style = "solid";
    color = "black";
  ];
  "src/dom/predicate/has-incorrect-role-without-name.ts" -> "src/dom/predicate/has-accessible-name.ts" [
    style = "invis";
  ];
  "src/dom/predicate/has-incorrect-role-without-name.ts" -> "src/dom/predicate/has-accessible-name.ts" [
    style = "solid";
    color = "black";
  ];
  "src/dom/predicate/has-incorrect-role-without-name.ts" -> "src/dom/predicate/has-explicit-role.ts" [
    style = "invis";
  ];
  "src/dom/predicate/has-incorrect-role-without-name.ts" -> "src/dom/predicate/has-explicit-role.ts" [
    style = "solid";
    color = "black";
  ];
  "exit_src/node" -> "name_src/name" [
    style = "invis";
    color = "#ccff00";
    lhead = "cluster_src/name";
    ltail = "cluster_src/node";
  ];
  "src/node/text.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/node.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/node/predicate/has-role.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/node.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/node/predicate/has-role.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/role.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "exit_src/node" -> "name_src/role" [
    style = "solid";
    color = "#ccff00";
    lhead = "cluster_src/role";
    ltail = "cluster_src/node";
  ];
  "src/role.ts" -> "src/attribute.ts" [
    style = "invis";
  ];
  "src/role.ts" -> "src/attribute.ts" [
    style = "dotted";
    color = "black";
  ];
  "src/role.ts" -> "src/feature.ts" [
    style = "invis";
  ];
  "src/role.ts" -> "src/feature.ts" [
    style = "solid";
    color = "black";
  ];
  "src/role.ts" -> "name_src/role" [
    style = "solid";
    color = "#ff0000";
    lhead = "cluster_src/role";
  ];
  "src/role.ts" -> "name_src/role" [
    style = "invis";
    color = "#ff0000";
    lhead = "cluster_src/role";
  ];
  "src/dom/predicate/has-role.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/dom" -> "src/node.ts" [
    style = "solid";
    color = "#33ff00";
    ltail = "cluster_src/dom";
  ];
  "src/dom/predicate/has-role.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/dom" -> "src/role.ts" [
    style = "invis";
    color = "#33ff00";
    ltail = "cluster_src/dom";
  ];
  "exit_src/dom" -> "name_src/role" [
    style = "solid";
    color = "#33ff00";
    lhead = "cluster_src/role";
    ltail = "cluster_src/dom";
  ];
  "src/node/container.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/node.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/node/container.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/role.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/node/predicate/has-attribute.ts" -> "src/attribute.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/attribute.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/node/predicate/has-attribute.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/node" -> "src/node.ts" [
    style = "invis";
    color = "#ccff00";
    ltail = "cluster_src/node";
  ];
  "src/attribute.ts" -> "name_src/attribute" [
    style = "solid";
    color = "#ff0000";
    lhead = "cluster_src/attribute";
  ];
  "src/attribute.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "src/attribute.ts" -> "src/role.ts" [
    style = "solid";
    color = "black";
  ];
  "src/attribute.ts" -> "name_src/role" [
    style = "dotted";
    color = "#ff0000";
    lhead = "cluster_src/role";
  ];
  "src/dom/predicate/has-heading-level.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/dom" -> "src/node.ts" [
    style = "invis";
    color = "#33ff00";
    ltail = "cluster_src/dom";
  ];
  "src/name/predicate/index.ts" -> "src/name/predicate/has-value.ts" [
    style = "invis";
  ];
  "src/name/predicate/index.ts" -> "src/name/predicate/has-value.ts" [
    style = "solid";
    color = "black";
  ];
  "exit_src/name" -> "name_src/dom" [
    style = "solid";
    color = "#cc00ff";
    lhead = "cluster_src/dom";
    ltail = "cluster_src/name";
  ];
  "src/name/name.ts" -> "src/feature.ts" [
    style = "invis";
  ];
  "exit_src/name" -> "src/feature.ts" [
    style = "solid";
    color = "#cc00ff";
    ltail = "cluster_src/name";
  ];
  "src/name/name.ts" -> "name_src/name/predicate" [
    style = "solid";
    color = "#cc00ff";
    lhead = "cluster_src/name/predicate";
  ];
  "src/name/name.ts" -> "src/name/source.ts" [
    style = "invis";
  ];
  "src/name/name.ts" -> "src/name/source.ts" [
    style = "solid";
    color = "black";
  ];
  "src/name/name.ts" -> "src/name/state.ts" [
    style = "invis";
  ];
  "src/name/name.ts" -> "src/name/state.ts" [
    style = "solid";
    color = "black";
  ];
  "src/name/name.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/name" -> "src/role.ts" [
    style = "solid";
    color = "#cc00ff";
    ltail = "cluster_src/name";
  ];
  "src/name/source.ts" -> "src/name/name.ts" [
    style = "invis";
  ];
  "src/name/source.ts" -> "src/name/name.ts" [
    style = "dotted";
    color = "black";
  ];
  "src/dom/predicate/has-implicit-role.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/dom" -> "src/role.ts" [
    style = "invis";
    color = "#33ff00";
    ltail = "cluster_src/dom";
  ];
  "src/index.ts" -> "src/attribute.ts" [
    style = "invis";
  ];
  "src/index.ts" -> "src/attribute.ts" [
    style = "solid";
    color = "black";
  ];
  "src/index.ts" -> "name_src/dom" [
    style = "solid";
    color = "#ff0000";
    lhead = "cluster_src/dom";
  ];
  "src/index.ts" -> "src/feature.ts" [
    style = "invis";
  ];
  "src/index.ts" -> "src/feature.ts" [
    style = "solid";
    color = "black";
  ];
  "src/index.ts" -> "name_src/name" [
    style = "solid";
    color = "#ff0000";
    lhead = "cluster_src/name";
  ];
  "src/index.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "src/index.ts" -> "src/node.ts" [
    style = "solid";
    color = "black";
  ];
  "src/index.ts" -> "name_src/node" [
    style = "solid";
    color = "#ff0000";
    lhead = "cluster_src/node";
  ];
  "src/index.ts" -> "name_src/node" [
    style = "invis";
    color = "#ff0000";
    lhead = "cluster_src/node";
  ];
  "src/index.ts" -> "name_src/node" [
    style = "invis";
    color = "#ff0000";
    lhead = "cluster_src/node";
  ];
  "src/index.ts" -> "name_src/node" [
    style = "invis";
    color = "#ff0000";
    lhead = "cluster_src/node";
  ];
  "src/index.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "src/index.ts" -> "src/role.ts" [
    style = "solid";
    color = "black";
  ];
  "src/name/predicate/has-value.ts" -> "src/name/name.ts" [
    style = "invis";
  ];
  "exit_src/name/predicate" -> "src/name/name.ts" [
    style = "dotted";
    color = "#00ff66";
    ltail = "cluster_src/name/predicate";
  ];
  "src/feature.ts" -> "src/attribute.ts" [
    style = "invis";
  ];
  "src/feature.ts" -> "src/attribute.ts" [
    style = "solid";
    color = "black";
  ];
  "src/feature.ts" -> "name_src/name" [
    style = "solid";
    color = "#ff0000";
    lhead = "cluster_src/name";
  ];
  "src/feature.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "src/feature.ts" -> "src/role.ts" [
    style = "solid";
    color = "black";
  ];
  "src/dom/predicate/has-explicit-role.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "exit_src/dom" -> "src/role.ts" [
    style = "invis";
    color = "#33ff00";
    ltail = "cluster_src/dom";
  ];
  "src/dom/predicate/has-non-default-role.ts" -> "src/dom/predicate/has-explicit-role.ts" [
    style = "invis";
  ];
  "src/dom/predicate/has-non-default-role.ts" -> "src/dom/predicate/has-explicit-role.ts" [
    style = "solid";
    color = "black";
  ];
  "src/dom/predicate/has-non-default-role.ts" -> "src/dom/predicate/has-implicit-role.ts" [
    style = "invis";
  ];
  "src/dom/predicate/has-non-default-role.ts" -> "src/dom/predicate/has-implicit-role.ts" [
    style = "solid";
    color = "black";
  ];
  "src/node/predicate.ts" -> "name_src/node/predicate" [
    style = "solid";
    color = "#ccff00";
    lhead = "cluster_src/node/predicate";
  ];
  "src/node/predicate.ts" -> "name_src/node/predicate" [
    style = "invis";
    color = "#ccff00";
    lhead = "cluster_src/node/predicate";
  ];
  "src/node/predicate.ts" -> "name_src/node/predicate" [
    style = "invis";
    color = "#ccff00";
    lhead = "cluster_src/node/predicate";
  ];
  "exit_src/dom" -> "name_src/name" [
    style = "invis";
    color = "#33ff00";
    lhead = "cluster_src/name";
    ltail = "cluster_src/dom";
  ];
  "src/dom/predicate/has-accessible-name.ts" -> "src/node.ts" [
    style = "invis";
  ];
  "exit_src/dom" -> "src/node.ts" [
    style = "invis";
    color = "#33ff00";
    ltail = "cluster_src/dom";
  ];
  "exit_src/dom" -> "name_src/node" [
    style = "solid";
    color = "#33ff00";
    lhead = "cluster_src/node";
    ltail = "cluster_src/dom";
  ];
  "src/node.ts" -> "src/attribute.ts" [
    style = "invis";
  ];
  "src/node.ts" -> "src/attribute.ts" [
    style = "solid";
    color = "black";
  ];
  "src/node.ts" -> "src/feature.ts" [
    style = "invis";
  ];
  "src/node.ts" -> "src/feature.ts" [
    style = "solid";
    color = "black";
  ];
  "src/node.ts" -> "src/index.ts" [
    style = "invis";
  ];
  "src/node.ts" -> "src/index.ts" [
    style = "solid";
    color = "black";
  ];
  "src/node.ts" -> "name_src/name" [
    style = "solid";
    color = "#ff0000";
    lhead = "cluster_src/name";
  ];
  "src/node.ts" -> "name_src/node" [
    style = "solid";
    color = "#ff0000";
    lhead = "cluster_src/node";
  ];
  "src/node.ts" -> "src/role.ts" [
    style = "invis";
  ];
  "src/node.ts" -> "src/role.ts" [
    style = "solid";
    color = "black";
  ];
  "src/dom/predicate/is-included-accessibility-tree.ts" -> "src/index.ts" [
    style = "invis";
  ];
  "exit_src/dom" -> "src/index.ts" [
    style = "solid";
    color = "#33ff00";
    ltail = "cluster_src/dom";
  ];
  "src/role/predicate.ts" -> "name_src/role/predicate" [
    style = "solid";
    color = "#3300ff";
    lhead = "cluster_src/role/predicate";
  ];
}