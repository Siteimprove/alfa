name: Alfa operations
description: "Wrapper for Alfa maintenance operations that update git."

inputs:
  # Authentication of the user who will commit the changes
  # This user must be able to bypass branch protections as it will commit directly to main.
  user-name:
    description: "The git user name to use for commits"
    required: true
  user-email:
    description: "The git user email to use for commits"
    required: true
  setup-playwright:
    description: "Whether to setup Playwright browsers"
    required: false
    default: "false"
  documentation:
    description: "Whether to generate documentation"
    required: false
    default: "false"
  dependency-graphs:
    description: "Whether to generate dependency graphs"
    required: false
    default: "false"
  coverage:
    description: "Whether to generate coverage reports."
    required: false
    default: "false"
  coverage-url:
    description: "The URL of the coverage API endpoint"
    required: false
  coverage-api-key:
    description: "The API key to authenticate with the coverage API"
    required: false
  publish:
    description: "Whether to create and publish a new version."
    required: false
    default: "false"
  public:
    description: "Whether the packages are public and require a provenance statement."
    required: false
    default: "true" # Most Alfa repos are public.
  npm-publish:
    description: "Whether to publish the packages to the npm registry in addition to the Github Packages registry."
    required: false
    default: "false"
  token:
    description: "A PAT for the user who will commit. Need to have the repo:write permission."
    required: true
  npm-token:
    description: "Token for NPM publication, must be set up if inputs.npm-publish is true."
    required: false

runs:
  using: composite
  steps:
    - name: Checkout repository
      # Checkout the repository, so we can call the local actions
      uses: actions/checkout@v5
      with:
        # Only this step needs to be done with the upgraded token, all other actions steps can be done
        # with the regular token generated by Github
        token: ${{ inputs.token }}

    - name: Setup
      uses: siteimprove/alfa/.github/actions/setup@main
      with:
        user-name: ${{ inputs.user-name }}
        user-email: ${{ inputs.user-email }}
        setup-playwright: ${{ inputs.setup-playwright }}

    - name: Generate coverage data
      if: inputs.coverage == 'true'
      uses: siteimprove/alfa/.github/actions/coverage@main

    - name: Generate documentation
      if: inputs.generate-documentation == 'true'
      uses: siteimprove/alfa/.github/actions/documentation@main

    - name: Bump version
      id: version
      if: inputs.publish == 'true'
      uses: siteimprove/alfa/.github/actions/version@main

    - name: Push changes
      shell: bash
      # "version" may create a new tag, so we need to push tags too.
      run: git push --follow-tags

    - name: Publish packages
      if: inputs.publish == 'true'
      uses: siteimprove/alfa/.github/actions/publish@main
      with:
        version: ${{ steps.version.outputs.version }}
        public: ${{ inputs.public }}
        npm-publish: ${{ inputs.npm-publish }}
        npm-token: ${{ inputs.npm-token }}
